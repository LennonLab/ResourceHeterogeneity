make.contigs(file=HMWF.files, insert=30, deltaq=6, processors=8)
summary.seqs(fasta=HMWF.trim.contigs.fasta, processors=8)
screen.seqs(fasta=HMWF.trim.contigs.fasta, group=HMWF.contigs.groups, summary=HMWF.trim.contigs.summary, maxambig=0, maxlength=275, processors=8)
remove.seqs(accnos=HMWF.trim.contigs.bad.accnos, group=HMWF.contigs.groups)
system(mv HMWF.contigs.pick.groups HMWF.contigs.good.groups)
unique.seqs(fasta=HMWF.trim.contigs.good.fasta)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.fasta, processors=8)
count.seqs(name=HMWF.trim.contigs.good.names, group=HMWF.contigs.good.groups)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.fasta, count=HMWF.trim.contigs.good.count_table, processors=8)
align.seqs(fasta=HMWF.trim.contigs.good.unique.fasta, reference=silva.v4.fasta, flip=F, processors=8)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.align, processors=8)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.flip.accnos, processors=8)
screen.seqs(fasta=HMWF.trim.contigs.good.unique.align, count=HMWF.trim.contigs.good.count_table, minlength=250, maxhomop=8, processors=8)
remove.seqs(accnos=HMWF.trim.contigs.good.unique.bad.accnos, count=HMWF.trim.contigs.good.count_table)
system(mv HMWF.trim.contigs.good.pick.count_table HMWF.trim.contigs.good.good.count_table)
count.groups(count=HMWF.trim.contigs.good.good.count_table)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.good.align, count=HMWF.trim.contigs.good.good.count_table, processors=8)
screen.seqs(fasta=HMWF.trim.contigs.good.unique.good.align, count=HMWF.trim.contigs.good.good.count_table, maxambig=0, maxhomop=8, minlength=250, start=1965, end=11553, processors=8)
remove.seqs(accnos=HMWF.trim.contigs.good.unique.good.bad.accnos, count=HMWF.trim.contigs.good.good.count_table)
system(mv HMWF.trim.contigs.good.good.pick.count_table HMWF.trim.contigs.good.good.good.count_table)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.good.good.align, count=HMWF.trim.contigs.good.good.good.count_table, processors=8)
filter.seqs(fasta=HMWF.trim.contigs.good.unique.good.good.align, vertical=T, trump=.)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.good.good.filter.fasta,count=HMWF.trim.contigs.good.good.good.count_table, processors=8)
unique.seqs(fasta=HMWF.trim.contigs.good.unique.good.good.filter.fasta, count=HMWF.trim.contigs.good.good.good.count_table)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.good.good.filter.unique.fasta, count=HMWF.trim.contigs.good.unique.good.good.filter.count_table, processors=8)
pre.cluster(fasta=HMWF.trim.contigs.good.unique.good.good.filter.unique.fasta, count=HMWF.trim.contigs.good.unique.good.good.filter.count_table, diffs=2, processors=8)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.good.good.filter.unique.precluster.fasta, count=HMWF.trim.contigs.good.unique.good.good.filter.unique.precluster.count_table, processors=8)
chimera.vsearch(fasta=HMWF.trim.contigs.good.unique.good.good.filter.unique.precluster.fasta, count=HMWF.trim.contigs.good.unique.good.good.filter.unique.precluster.count_table, dereplicate=t, processors=8)
remove.seqs(fasta=HMWF.trim.contigs.good.unique.good.good.filter.unique.precluster.fasta, accnos=HMWF.trim.contigs.good.unique.good.good.filter.unique.precluster.denovo.vsearch.accnos)
summary.seqs(fasta=HMWF.trim.contigs.good.unique.good.good.filter.unique.precluster.pick.fasta, count=HMWF.trim.contigs.good.unique.good.good.filter.unique.precluster.denovo.vsearch.pick.count_table, processors=8)
